import { useState } from "react";
import "../styles/CourseTabs.css";
import defoultAvatar from '../assets/default-avatar.jpg'
import axios from "axios";
import { formatName } from "../common/formatName";

export default function CourseInfo({ courseData, userRole }) {
    const [inviteCode, setInviteCode] = useState(courseData?.inviteCode || "");
    const [isEditing, setIsEditing] = useState(false);
    const [saving, setSaving] = useState(false);
    const [copied, setCopied] = useState(false);
    const [cooldown, setCooldown] = useState(0);

    const handleGenerate = async () => {
        if (cooldown > 0) return;

        try {
            const response = await axios.get(
                `${import.meta.env.VITE_SERVER_DOMAIN}/courses/${courseData._id}/invite-code/generate`,
                { withCredentials: true }
            );
            setInviteCode(response.data);
            startCooldown();
        } catch (error) {
            alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∫–æ–¥");
        }
    };

    const startCooldown = () => {
        setCooldown(15);
        const interval = setInterval(() => {
            setCooldown(prev => {
                if (prev <= 1) {
                    clearInterval(interval);
                    return 0;
                }
                return prev - 1;
            });
        }, 1000);
    };

    const handleCopy = async () => {
        try {
            await navigator.clipboard.writeText(inviteCode);
            setCopied(true);
            setTimeout(() => setCopied(false), 1500);
        } catch (err) {
            alert("–ù–µ –≤–¥–∞–ª–æ—Å—è —Å–∫–æ–ø—ñ—é–≤–∞—Ç–∏ –∫–æ–¥");
        }
    }

    const handleDeleteCourse = async () => {
        const firstConfirm = window.confirm("‚ö†Ô∏è –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∫—É—Ä—Å?");
        if (!firstConfirm) return;

        const secondConfirm = window.confirm("–í—Å—ñ –¥–∞–Ω—ñ –±—É–¥—É—Ç—å –≤—Ç—Ä–∞—á–µ–Ω—ñ –Ω–∞–∑–∞–≤–∂–¥–∏. –í–∏–¥–∞–ª–∏—Ç–∏ –∫—É—Ä—Å ?");
        if (!secondConfirm) return;

        try {
            const res = await axios.delete(import.meta.env.VITE_SERVER_DOMAIN + `/delete/course/${courseData._id}`, { withCredentials: true });
            window.location.href = "/";
        } catch (err) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫—É—Ä—Å—É:", err);
            alert("–ù–µ–≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∫—É—Ä—Å, —Ç—Ä–∞–ø–∏–ª–∞—Å—å –Ω–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞");
        }
    };

    const createdDate = new Date(courseData.joinedAt).toLocaleString("uk-UA");

    return (
        <div className="course-info">
            <h2>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫—É—Ä—Å</h2>
            <p><strong>–ù–∞–∑–≤–∞:</strong> {courseData.title}</p>
            <p><strong>–û–ø–∏—Å:</strong> {courseData.description}</p>
            <p><strong>–°—Ç–≤–æ—Ä–µ–Ω–æ:</strong> {createdDate}</p>

            <h3>–í–∏–∫–ª–∞–¥–∞—á</h3>
            <div className="person-card">
                <div className="ci-porson-info-container">
                    <img src={courseData.teacherId?.personal_info?.profile_img || defoultAvatar} alt="avatar" className="ci-img-avatar" />
                    <div className="person-info">
                        <p>{formatName(courseData.teacherId?.personal_info?.fullname) || "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö !"}</p>
                        <p>{courseData.teacherId?.personal_info?.email || "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö !"}</p>
                    </div>
                </div>
                <a href={`mailto:${courseData.teacherId?.personal_info?.email}`} className="ci-link-email" >
                    <span className="fi fi-rr-envelope icon"></span>
                </a>

            </div>

            {userRole.role === "teacher" && (
                <div className="invite-code-box">
                    <div className="ci-invate-code-container">
                        <div>
                            <label>–ö–æ–¥ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è:</label>
                            <span
                                className="ci-invite-code"
                                onClick={handleCopy}

                            >
                                {inviteCode}
                                {copied && <span className="tooltip">–°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!</span>}
                            </span>
                        </div>

                        <button
                            className="ci-button-generate-code"
                            onClick={handleGenerate}
                            disabled={cooldown > 0}
                        >
                            {cooldown > 0 ? `–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ ${cooldown} —Å` : "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–¥"}
                        </button>

                    </div>
                </div>
            )}

            {userRole.role === "teacher" && (
                <div className="ci-delete-course-container">
                    <button
                        className="ci-delete-course-button"
                        onClick={() => handleDeleteCourse()}
                    >
                        üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∫—É—Ä—Å
                    </button>
                </div>
            )}
        </div>
    );
}